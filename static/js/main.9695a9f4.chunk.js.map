{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","constants.js","App.js","action.js","reducers.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","CHANGE_SEARCH_FIELD","REQUEST_MONSTERS_PENDING","REQUEST_MONSTERS_SUCCESS","REQUEST_MONSTERS_FAILED","App","this","onRequestMonsters","searchField","onSearchChange","isPending","filteredMonsters","filter","toLowerCase","includes","Component","connect","state","searchMonsters","requestMonsters","error","dispatch","event","text","target","value","payload","fetch","then","response","json","data","catch","initialStateSearch","initialStateMonsters","logger","createLogger","rootReducers","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"oTAIaA,G,YAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAML,EAAMI,QAAQE,KAApB,OACA,kCAAKN,EAAMI,QAAQG,MAAnB,YCFKC,G,MAAW,SAACR,GAAD,OACpB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLlBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACAZ,UAAY,SACZa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCTDG,EAAoB,sBAEpBC,EAA2B,2BAC3BC,EAA2B,2BAC3BC,EAA0B,0B,OCoBjCC,E,kLAIFC,KAAKrB,MAAMsB,sB,+BAIH,IAAD,EACsDD,KAAKrB,MAA1DuB,EADD,EACCA,YAAaC,EADd,EACcA,eAAgBf,EAD9B,EAC8BA,SAAUgB,EADxC,EACwCA,UACzCC,EAAmBjB,EAASkB,QAAO,SAAAvB,GACvC,OAAOA,EAAQE,KAAKsB,cAAcC,SAASN,EAAYK,kBAEzD,OAAOH,EACL,4CAGA,sBAAKxB,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAgBW,IAElB,cAAC,EAAD,CAAUf,SAAUiB,W,GAvBVI,aA8BHC,eA9CS,SAACC,GACvB,MAAO,CACHT,YAAaS,EAAMC,eAAeV,YAClCd,SAAUuB,EAAME,gBAAgBzB,SAChCgB,UAAWO,EAAME,gBAAgBT,UACjCU,MAAOH,EAAME,gBAAgBC,UAIR,SAACC,GAC1B,MAAO,CACLZ,eAAgB,SAACa,GAAD,OAAWD,GCZAE,EDYwBD,EAAME,OAAOC,MCZ3B,CACvC1B,KAAME,EACNyB,QAASH,KAFmB,IAACA,GDa3BhB,kBAAmB,kBAAMc,GCRQ,SAACA,GACpCA,EAAS,CAAEtB,KAAMG,IACjByB,MAAM,8CACHC,MAAM,SAAAC,GAAQ,OAAEA,EAASC,UACzBF,MAAK,SAAAG,GAAI,OAAIV,EAAS,CAACtB,KAAMI,EAA0BuB,QAASK,OAChEC,OAAM,SAAAZ,GAAK,OAAIC,EAAS,CAACtB,KAAMK,EAAyBsB,QAASN,cDqCvDJ,CAA6CX,G,OE/CtD4B,EAAqB,CACzBzB,YAAa,IAYT0B,EAAuB,CAC3BxC,SAAU,GACVgB,WAAW,G,gBCZPyB,EAAUC,yBACVC,EAAeC,YAAgB,CAACpB,eDAR,WAA0C,IAAzCD,EAAwC,uDAAlCgB,EAAoBM,EAAc,uDAAP,GAC9D,OAAQA,EAAOxC,MACb,KAAKE,EACH,OAAOuC,OAAOC,OAAO,GAAIxB,EAAO,CAACT,YAAa+B,EAAOb,UACvD,QACE,OAAOT,ICLyCE,gBDcvB,WAA4C,IAA3CF,EAA0C,uDAApCiB,EAAsBK,EAAc,uDAAP,GACjE,OAAQA,EAAOxC,MACb,KAAKG,EACH,OAAOsC,OAAOC,OAAO,GAAIxB,EAAO,CAACP,WAAW,IAC9C,KAAKP,EACH,OAAOqC,OAAOC,OAAO,GAAIxB,EAAO,CAACvB,SAAU6C,EAAOb,QAAShB,WAAW,IACxE,KAAKN,EACH,OAAOoC,OAAOC,OAAO,GAAIxB,EAAO,CAACG,MAAOmB,EAAOb,UACjD,QACE,OAAOT,MCtBPyB,EAAQC,YAAYN,EAAcO,YAAgBC,IAAiBV,IAGzEW,IAASC,OACP,cAAC,IAAD,CAAUL,MAAQA,EAAlB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.9695a9f4.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.styles.css'\n\nexport const Card = (props) => (\n    <div className='card-container'>\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\n        <h2> {props.monster.name} </h2>\n        <p> {props.monster.email} </p>\n    </div>\n)","import React from 'react';\n\nimport { Card } from '../card/card.component';\n\nimport './card-list.styles.css';\n\nexport const CardList = (props) => (\n    <div className='card-list'>\n        {props.monsters.map(monster => (\n            <Card key={monster.id} monster={monster} />\n        ))}\n    </div>\n)","import React from 'react';\n\nimport './search-box.styles.css'\n\nexport const SearchBox = ({placeholder, handleChange}) => (\n    <input \n    className = 'search'\n    type='search' \n    placeholder={placeholder}\n    onChange={handleChange}\n    />\n);","export const CHANGE_SEARCH_FIELD=\"CHANGE_SEARCH_FIELD\"\n\nexport const REQUEST_MONSTERS_PENDING = 'REQUEST_MONSTERS_PENDING';\nexport const REQUEST_MONSTERS_SUCCESS = 'REQUEST_MONSTERS_SUCCESS';\nexport const REQUEST_MONSTERS_FAILED = 'REQUEST_MONSTERS_FAILED';\n","import './App.css';\nimport React, {Component} from 'react';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\nimport {setSearchField, requestMonsters} from './action';\nimport { connect } from 'react-redux';\n\n\nconst mapStateToProps = (state) => {\n  return {\n      searchField: state.searchMonsters.searchField,\n      monsters: state.requestMonsters.monsters,\n      isPending: state.requestMonsters.isPending,\n      error: state.requestMonsters.error\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestMonsters: () => dispatch(requestMonsters())\n  }\n}\n\nclass App extends Component { \n\n\n  componentDidMount() {\n    this.props.onRequestMonsters()\n  }\n\n\n  render() {\n    const { searchField, onSearchChange, monsters, isPending } = this.props;\n    const filteredMonsters = monsters.filter(monster => {\n      return monster.name.toLowerCase().includes(searchField.toLowerCase())\n    })\n    return isPending ?\n      <h1>Loading...</h1>\n      :\n      (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder='search monsters' \n          handleChange = {onSearchChange}\n        />\n        <CardList monsters={filteredMonsters}>        \n        </CardList>\n    </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_MONSTERS_PENDING,\n  REQUEST_MONSTERS_SUCCESS,\n  REQUEST_MONSTERS_FAILED\n} from './constants'\n\nexport const setSearchField = (text) => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text\n})\n\nexport const requestMonsters = () => (dispatch) => {\n  dispatch({ type: REQUEST_MONSTERS_PENDING});\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then (response=>response.json())\n    .then(data => dispatch({type: REQUEST_MONSTERS_SUCCESS, payload: data}))\n    .catch(error => dispatch({type: REQUEST_MONSTERS_FAILED, payload: error}))\n}\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_MONSTERS_PENDING,\n  REQUEST_MONSTERS_SUCCESS,\n  REQUEST_MONSTERS_FAILED\n } from './constants';\n\nconst initialStateSearch = {\n  searchField: ''\n}\n\nexport const searchMonsters = (state=initialStateSearch, action={}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, {searchField: action.payload})\n    default:\n      return state\n  }\n}\n\nconst initialStateMonsters = {\n  monsters: [],\n  isPending: true\n}\n\nexport const requestMonsters = (state=initialStateMonsters, action={}) => {\n  switch (action.type) {\n    case REQUEST_MONSTERS_PENDING:\n      return Object.assign({}, state, {isPending: true})\n    case REQUEST_MONSTERS_SUCCESS:\n      return Object.assign({}, state, {monsters: action.payload, isPending: false})\n    case REQUEST_MONSTERS_FAILED:\n      return Object.assign({}, state, {error: action.payload})\n    default:\n      return state\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport {createStore, applyMiddleware, combineReducers } from 'redux';\nimport { searchMonsters, requestMonsters } from './reducers';\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\n\nconst logger =  createLogger();\nconst rootReducers = combineReducers({searchMonsters, requestMonsters})\nconst store = createStore(rootReducers, applyMiddleware(thunkMiddleware, logger));\n\n\nReactDOM.render(\n  <Provider store ={store}>\n    <App  />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}